{"ast":null,"code":"var _jsxFileName = \"D:\\\\ExpressJS-ReactJS\\\\BOOKINGAPP\\\\client\\\\src\\\\components\\\\reserve\\\\Reserve.jsx\",\n    _s = $RefreshSig$();\n\nimport { faCircleXmark } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useContext, useState } from 'react';\nimport useFetch from '../../hooks/useFetch';\nimport { SearchContext } from '../../context/SearchContext';\nimport \"./reserve.css\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reserve = _ref => {\n  _s();\n\n  let {\n    setOpen,\n    hotelId\n  } = _ref;\n  const [selectedRooms, setSelectedRooms] = useState([]);\n  const {\n    data,\n    loading,\n    error\n  } = useFetch(`http://localhost:5000/api/hotels/room/${hotelId}`);\n  const {\n    dates\n  } = useContext(SearchContext);\n\n  const getDatesInRange = (startDate, endDate) => {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const date = new Date(start.getTime());\n    const dates = [];\n\n    while (date <= end) {\n      dates.push(new Date(date).getTime());\n      date.setDate(date.getDate() + 1);\n    }\n\n    return dates;\n  };\n\n  const alldates = getDatesInRange(dates[0].startDate, dates[0].endDate);\n\n  const isAvailable = roomNumber => {\n    const isFound = roomNumber.unavailableDates.some(date => alldates.includes(new Date(date).getTime()));\n    return !isFound;\n  };\n\n  const handleSelect = e => {\n    const checked = e.target.checked;\n    const value = e.target.value;\n    setSelectedRooms(checked ? [...selectedRooms, value] : selectedRooms.filter(item => item !== value));\n  };\n\n  const handleClick = async () => {\n    try {\n      await Promise.all(selectedRooms.map(roomId => {\n        const res = axios.put(`http://localhost:5000/api/rooms/availability/${roomId}`, {\n          dates: alldates\n        });\n        return res.data;\n      }));\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    classNmae: \"reserve\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rContainer\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCircleXmark,\n        className: \"rClose\",\n        onClick: () => setOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Select Your Rooms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rItemInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rTitle\",\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rDesc\",\n            children: item.desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rMax\",\n            children: [\"Max People: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: item.maxPeople\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rPrice\",\n            children: item.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rSelectRooms\",\n          children: item.roomNumbers.map(roomNumber => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"room\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: roomNumber.number\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              value: roomNumber._id,\n              onChange: handleSelect,\n              disabled: !isAvailable(roomNumber)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        className: \"rButton\",\n        children: \"Reserve now!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Reserve, \"sgGmFRi2+y9gipjvFpOK0FbzQf8=\", false, function () {\n  return [useFetch];\n});\n\n_c = Reserve;\nexport default Reserve;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"sources":["D:/ExpressJS-ReactJS/BOOKINGAPP/client/src/components/reserve/Reserve.jsx"],"names":["faCircleXmark","FontAwesomeIcon","React","useContext","useState","useFetch","SearchContext","axios","Reserve","setOpen","hotelId","selectedRooms","setSelectedRooms","data","loading","error","dates","getDatesInRange","startDate","endDate","start","Date","end","date","getTime","push","setDate","getDate","alldates","isAvailable","roomNumber","isFound","unavailableDates","some","includes","handleSelect","e","checked","target","value","filter","item","handleClick","Promise","all","map","roomId","res","put","err","title","desc","maxPeople","price","roomNumbers","number","_id"],"mappings":"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","sourcesContent":["import { faCircleXmark } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport React, { useContext, useState } from 'react';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport { SearchContext } from '../../context/SearchContext';\r\nimport \"./reserve.css\"\r\nimport axios from 'axios';\r\n\r\nconst Reserve = ({setOpen, hotelId}) => {\r\n    const [selectedRooms, setSelectedRooms] = useState([]);\r\n    const { data, loading, error } = useFetch(`http://localhost:5000/api/hotels/room/${hotelId}`);\r\n    const { dates } = useContext(SearchContext);\r\n\r\n    const getDatesInRange = (startDate, endDate) => {\r\n        const start = new Date(startDate);\r\n        const end = new Date(endDate);\r\n\r\n        const date = new Date(start.getTime());\r\n\r\n        const dates = [] ; \r\n\r\n        while ( date <= end ) {\r\n            dates.push(new Date(date).getTime());\r\n            date.setDate(date.getDate() + 1);\r\n        }\r\n\r\n        return dates;\r\n    }\r\n\r\n    const alldates = getDatesInRange(dates[0].startDate, dates[0].endDate);\r\n\r\n    const isAvailable = (roomNumber) => {\r\n        const isFound = roomNumber.unavailableDates.some((date) => \r\n            alldates.includes(new Date(date).getTime())   \r\n        );\r\n\r\n        return !isFound ;\r\n    }\r\n\r\n    const handleSelect = (e) => {\r\n        const checked = e.target.checked;\r\n        const value = e.target.value;\r\n        setSelectedRooms(\r\n            checked \r\n              ? [...selectedRooms, value]\r\n              : selectedRooms.filter((item) => item !== value) \r\n        )\r\n    }\r\n\r\n    const handleClick = async () => {\r\n      try{\r\n        await Promise.all(selectedRooms.map(roomId => {\r\n            const res = axios.put(`http://localhost:5000/api/rooms/availability/${roomId}`, {dates:alldates});\r\n            return res.data\r\n        }));\r\n      } catch(err){\r\n\r\n      }       \r\n    }\r\n\r\n  return (\r\n    <div classNmae=\"reserve\">\r\n        <div className=\"rContainer\">\r\n            <FontAwesomeIcon \r\n              icon={faCircleXmark} \r\n              className=\"rClose\" \r\n              onClick={() => setOpen(false)} \r\n            />\r\n            <span>Select Your Rooms</span>\r\n            {data.map((item) => (\r\n                <div className=\"rItem\">\r\n                    <div className=\"rItemInfo\">\r\n                        <div className=\"rTitle\">{item.title}</div>\r\n                        <div className=\"rDesc\">{item.desc}</div>\r\n                        <div className=\"rMax\">\r\n                            Max People: <b>{item.maxPeople}</b>\r\n                        </div>\r\n                        <div className=\"rPrice\">{item.price}</div>\r\n                    </div>\r\n                    <div className=\"rSelectRooms\">\r\n                       {item.roomNumbers.map((roomNumber) => (\r\n                            <div className=\"room\">\r\n                               <label>{roomNumber.number}</label>\r\n                               <input \r\n                                  type=\"checkbox\" \r\n                                  value={roomNumber._id} \r\n                                  onChange={handleSelect}\r\n                                  disabled={!isAvailable(roomNumber)}\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            <button onClick={handleClick} className=\"rButton\">Reserve now!</button>       \r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Reserve"]},"metadata":{},"sourceType":"module"}